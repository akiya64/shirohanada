on:
  push:
    branches:
    - master
name: build
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare working branch
        run: |
          git checkout -b pre-release
      - name: Remove file for develop
        run: |
          find ./* -maxdepth 1 -type d -not -name fonts -and -not -name images -and -not -name components | xargs --no-run-if-empty rm -rf
          find . -maxdepth 1 -type d -path "*/.*" | grep -v ".*/\.git$" | xargs --no-run-if-empty rm -rf
          find . -maxdepth 1 -type f -not -name \*.php -and -not -name \*.css -not -name screenshot.png -not -name readme.txt | xargs --no-run-if-empty rm
          find components -type f -not -name \*.php | xargs --no-run-if-empty rm
          find images -type f -not -name \*.jpg | xargs --no-run-if-empty rm
      - name: Git commit & push pre-release
        env:
          ACCESS_TOKEN:  ${{ secrets.ACCESS_TOKEN }}
        run: |
          git config --global user.email "autumnsky64@gmail.com"
          git config --global user.name "Akiya in GitHub Actions"
          git add -A
          git commit -m "Build for deploy."
          git push https://x-access-token:${ACCESS_TOKEN}@github.com/akiya64/shirohanada pre-release

      - name: Push GitHub release
        env:
          ACCESS_TOKEN:  ${{ secrets.ACCESS_TOKEN }}
        run: |
          git fetch --prune --no-tags
          git branch release origin/release
          git checkout release
          git merge pre-release/origin -m "Merged build ${GITHUB_SHA}"
          git push https://x-access-token:${ACCESS_TOKEN}@github.com/akiya64/shirohanada release
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Checkout release
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          git checkout -b release origin/release
      - name: Import ssh key
        run: echo "$SSH_KEY" > key && chmod 600 key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
      - name: Deploy
        run: rsync -acvz --exclude ".git/" --exclude key -e "ssh -i key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" . $SSH_USER@$SSH_HOST:$THEME_PATH
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          THEME_PATH: ${{ secrets.THEME_PATH }}
